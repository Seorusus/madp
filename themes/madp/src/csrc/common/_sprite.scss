// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$chart-name: 'chart';
$chart-x: 84px;
$chart-y: 0px;
$chart-offset-x: -84px;
$chart-offset-y: 0px;
$chart-width: 81px;
$chart-height: 81px;
$chart-total-width: 305px;
$chart-total-height: 274px;
$chart-image: 'img/sprite.png';
$chart: (84px, 0px, -84px, 0px, 81px, 81px, 305px, 274px, 'img/sprite.png', 'chart', );
$five-name: 'five';
$five-x: 116px;
$five-y: 166px;
$five-offset-x: -116px;
$five-offset-y: -166px;
$five-width: 56px;
$five-height: 56px;
$five-total-width: 305px;
$five-total-height: 274px;
$five-image: 'img/sprite.png';
$five: (116px, 166px, -116px, -166px, 56px, 56px, 305px, 274px, 'img/sprite.png', 'five', );
$four-name: 'four';
$four-x: 174px;
$four-y: 166px;
$four-offset-x: -174px;
$four-offset-y: -166px;
$four-width: 56px;
$four-height: 56px;
$four-total-width: 305px;
$four-total-height: 274px;
$four-image: 'img/sprite.png';
$four: (174px, 166px, -174px, -166px, 56px, 56px, 305px, 274px, 'img/sprite.png', 'four', );
$handshake-name: 'handshake';
$handshake-x: 60px;
$handshake-y: 224px;
$handshake-offset-x: -60px;
$handshake-offset-y: -224px;
$handshake-width: 59px;
$handshake-height: 37px;
$handshake-total-width: 305px;
$handshake-total-height: 274px;
$handshake-image: 'img/sprite.png';
$handshake: (60px, 224px, -60px, -224px, 59px, 37px, 305px, 274px, 'img/sprite.png', 'handshake', );
$med-name: 'med';
$med-x: 0px;
$med-y: 224px;
$med-offset-x: 0px;
$med-offset-y: -224px;
$med-width: 58px;
$med-height: 50px;
$med-total-width: 305px;
$med-total-height: 274px;
$med-image: 'img/sprite.png';
$med: (0px, 224px, 0px, -224px, 58px, 50px, 305px, 274px, 'img/sprite.png', 'med', );
$one-name: 'one';
$one-x: 167px;
$one-y: 82px;
$one-offset-x: -167px;
$one-offset-y: -82px;
$one-width: 56px;
$one-height: 56px;
$one-total-width: 305px;
$one-total-height: 274px;
$one-image: 'img/sprite.png';
$one: (167px, 82px, -167px, -82px, 56px, 56px, 305px, 274px, 'img/sprite.png', 'one', );
$phone-name: 'phone';
$phone-x: 82px;
$phone-y: 84px;
$phone-offset-x: -82px;
$phone-offset-y: -84px;
$phone-width: 80px;
$phone-height: 80px;
$phone-total-width: 305px;
$phone-total-height: 274px;
$phone-image: 'img/sprite.png';
$phone: (82px, 84px, -82px, -84px, 80px, 80px, 305px, 274px, 'img/sprite.png', 'phone', );
$question-name: 'question';
$question-x: 249px;
$question-y: 110px;
$question-offset-x: -249px;
$question-offset-y: -110px;
$question-width: 40px;
$question-height: 54px;
$question-total-width: 305px;
$question-total-height: 274px;
$question-image: 'img/sprite.png';
$question: (249px, 110px, -249px, -110px, 40px, 54px, 305px, 274px, 'img/sprite.png', 'question', );
$three-name: 'three';
$three-x: 0px;
$three-y: 166px;
$three-offset-x: 0px;
$three-offset-y: -166px;
$three-width: 56px;
$three-height: 56px;
$three-total-width: 305px;
$three-total-height: 274px;
$three-image: 'img/sprite.png';
$three: (0px, 166px, 0px, -166px, 56px, 56px, 305px, 274px, 'img/sprite.png', 'three', );
$thumbs-name: 'thumbs';
$thumbs-x: 249px;
$thumbs-y: 0px;
$thumbs-offset-x: -249px;
$thumbs-offset-y: 0px;
$thumbs-width: 56px;
$thumbs-height: 54px;
$thumbs-total-width: 305px;
$thumbs-total-height: 274px;
$thumbs-image: 'img/sprite.png';
$thumbs: (249px, 0px, -249px, 0px, 56px, 54px, 305px, 274px, 'img/sprite.png', 'thumbs', );
$trophy-name: 'trophy';
$trophy-x: 167px;
$trophy-y: 0px;
$trophy-offset-x: -167px;
$trophy-offset-y: 0px;
$trophy-width: 80px;
$trophy-height: 80px;
$trophy-total-width: 305px;
$trophy-total-height: 274px;
$trophy-image: 'img/sprite.png';
$trophy: (167px, 0px, -167px, 0px, 80px, 80px, 305px, 274px, 'img/sprite.png', 'trophy', );
$two-name: 'two';
$two-x: 58px;
$two-y: 166px;
$two-offset-x: -58px;
$two-offset-y: -166px;
$two-width: 56px;
$two-height: 56px;
$two-total-width: 305px;
$two-total-height: 274px;
$two-image: 'img/sprite.png';
$two: (58px, 166px, -58px, -166px, 56px, 56px, 305px, 274px, 'img/sprite.png', 'two', );
$umbrella-name: 'umbrella';
$umbrella-x: 249px;
$umbrella-y: 56px;
$umbrella-offset-x: -249px;
$umbrella-offset-y: -56px;
$umbrella-width: 54px;
$umbrella-height: 52px;
$umbrella-total-width: 305px;
$umbrella-total-height: 274px;
$umbrella-image: 'img/sprite.png';
$umbrella: (249px, 56px, -249px, -56px, 54px, 52px, 305px, 274px, 'img/sprite.png', 'umbrella', );
$up-name: 'up';
$up-x: 0px;
$up-y: 0px;
$up-offset-x: 0px;
$up-offset-y: 0px;
$up-width: 82px;
$up-height: 82px;
$up-total-width: 305px;
$up-total-height: 274px;
$up-image: 'img/sprite.png';
$up: (0px, 0px, 0px, 0px, 82px, 82px, 305px, 274px, 'img/sprite.png', 'up', );
$user-name: 'user';
$user-x: 0px;
$user-y: 84px;
$user-offset-x: 0px;
$user-offset-y: -84px;
$user-width: 80px;
$user-height: 80px;
$user-total-width: 305px;
$user-total-height: 274px;
$user-image: 'img/sprite.png';
$user: (0px, 84px, 0px, -84px, 80px, 80px, 305px, 274px, 'img/sprite.png', 'user', );
$user2-name: 'user2';
$user2-x: 249px;
$user2-y: 166px;
$user2-offset-x: -249px;
$user2-offset-y: -166px;
$user2-width: 44px;
$user2-height: 44px;
$user2-total-width: 305px;
$user2-total-height: 274px;
$user2-image: 'img/sprite.png';
$user2: (249px, 166px, -249px, -166px, 44px, 44px, 305px, 274px, 'img/sprite.png', 'user2', );
$spritesheet-width: 305px;
$spritesheet-height: 274px;
$spritesheet-image: 'img/sprite.png';
$spritesheet-sprites: ($chart, $five, $four, $handshake, $med, $one, $phone, $question, $three, $thumbs, $trophy, $two, $umbrella, $up, $user, $user2, );
$spritesheet: (305px, 274px, 'img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
